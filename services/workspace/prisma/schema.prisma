generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id       String @id @unique
  publicId Int    @unique @default(autoincrement()) @map("public_id")

  status    Status   @default(ACTIVE) @map("status")
  createdAt DateTime @default(now()) @map("created_at")

  workspaceId String    @map("workspace_id")
  workspace   Workspace @relation(fields: [workspaceId], references: [id])

  name     String @map("name")
  email    String @unique @map("email")
  role     String @map("role")
  features BigInt @map("features")

  auth UserAuth?

  @@map("users")
}

model UserAuth {
  userId    String @id @unique @map("userId")
  signInKey String @unique @map("signInKey")

  passwordHash String @map("password_hash")

  workspaceId String @map("workspace_id")
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("users_auth")
}

model Workspace {
  id        String @id @unique @map("id")
  public_id Int    @unique @default(autoincrement()) @map("publicId")
  status    Status @default(ACTIVE) @map("status")

  users  User[]
  config WorkspaceConfig?

  name        String  @map("name")
  description String? @map("description")
  features    BigInt  @map("features")

  @@map("workspaces")
}

model WorkspaceConfig {
  workspaceId String    @id @unique @map("workspaceId")
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  status      Status    @default(ACTIVE) @map("status")

  currency String @default("BRL") @map("currency")
  timezone String @default("UTC-03:00/America/Sao_Paulo") @map("timezone")

  logoUrl String? @map("logo_url")

  @@map("workspace_config")
}

enum Status {
  ACTIVE
  INACTIVE
  DELETED
}
